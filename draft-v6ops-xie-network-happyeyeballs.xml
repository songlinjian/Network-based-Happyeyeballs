<?xml version="1.0"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2681 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2681.xml">
<!ENTITY RFC8305 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8305.xml">
<!ENTITY RFC6555 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6555.xml">
 


]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<?rfc tocappendix="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<?rfc comments="no" ?>
<?rfc inline="yes" ?>
<rfc category="std" docName="draft-v6ops-xie-network-happyeyeballs-00" ipr="trust200902">

  <front>

    <title>Network-side Happy Eyeballs based on accurate IPv6 measurement</title>

    <author fullname="Chongfeng Xie" initials="C." surname="Xie">
      <organization>China Telecom</organization>
      <address>
        <postal>
          <street>No.118 Xizhimennei street, Xicheng District</street>
          <city>Beijing</city>
          <region></region>
          <code>100035</code>
          <country>P. R. China</country>
        </postal>
        <email>xiechf.bri@chinatelecom.cn</email>
      </address>
    </author>

    <author fullname="Linjian Song" initials="L." surname="Song">
      <organization>Beijing Internet Institute</organization>
      <address>
        <postal>
          <street>2nd Floor, Building 5, No.58 Jing Hai Wu Lu, BDA</street>
          <city>Beijing</city>
          <region></region>
          <code>100176</code>
          <country>P. R. China</country>
        </postal>
        <email>songlinjian@gmail.com</email>
      </address>
    </author>

    <date/>
    <!-- Meta-data Declarations -->

    <area>Internet Area</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- <keyword>dns</keyword> -->

    <abstract>
      <t>
        During period of IPv6 transition, both ISP and ICP cares 
        about user's experience in dual-stack network. They hesitate 
        to provide IPv6 to their users due to the fear of poor IPv6 
        performance. Network-based Happy Eyeballs (NHE) is proposed 
        in this memo as a approach to provide better connectivity to 
        end users by doing accurate measurement and comparison on 
        IPv6/IPv4 performance on the network side other than 
        client-side Happy Eyeballs (<xref target="RFC8305" />).
        It can also work independently with the adoption of client-side 
        Happy Eyeballs.
      </t>

      <t>
       REMOVE BEFORE PUBLICATION: The source of the document with test 
       script is currently placed at GitHub <xref target="NHE-GitHub" />. 
       Comments and pull request are welcome.
      </t>

    </abstract>

  </front>

  <middle>

    <section title="Introduction">

      <t>
        Happy Eyeballs(HE) <xref target="RFC8305" />provides an approach 
        to enable clients to attempt multiple connections in parallel. 
        It is helpful to work around the blocked, broken, or sub-optimal 
        network. Taken IPv6 priority consideration in design, HE helps 
        increase IPv6 traffic in network and reduce the delay in client 
        side as well if IPv6 connectivity is poorer. However, in practice 
        there are still some bars keeping Content and application operators 
        from implementing HE. 
      </t>

      <t>
        Firstly, HE adds additional complexity and uncertainties 
        to both development and operation. For example, according to the 
        section 8 of RC8305 there are 6 Configurable values such as 
        Resolution Delay and Connection Attempt Delay. It raises a bar for 
        small ICPs to do a "nuanced implementation" to tune these values 
        according to network dynamics or history RTT data. Secondly, 
        paralleled connections emitted by HE will produce larger 
        volume of traffic which consume both mobile fees and power. As a 
        result mobile application developers may choose no to adopt HE or 
        even not consider migrating their APPs to IPv6 due to the issues. 
        It is typical case in regions where IPv6 performance is not as good
        as IPv4 in terms of RTT and failure rate. 
      </t>
      
      <t>  
        This draft is intend to proposed an Network-side Happy Eyeballs(NHE), 
        an approach to address the same problem targeted by Client-side 
        Happy eyeballs (<xref target="RFC8305" />) for IPv4/IPv6 dual-stack 
        users. Instead of requiring the client to race IPv6 and IPv4 
        connectivities, NHE intends to do the "race" on the network side in 
        advance and do selective filtering of the DNS AAAA record for 
        specific domain. The rationale of NHE approach is simple that ISPs 
        typically the mobile network provider has more resource, capability 
        and motivation to do accurate IPv6/IPv4 performance measurement for 
        the good of their users. With sufficient and accurate IPv6/IPv4 
        performance information, ISPs can make confident decision to 
        filter AAAA record or not. 
      </t>


       <t>It is worth to mention that with NHE approach, the operational issues 
        will not be hidden and ISP will be crystal clear about their IPv6 
        network performance and spare no effort to improve it.
       </t>

    </section>

    <section title="Overview of NHE Mechanism" anchor="NHE_mechanism">

      <t>
        Figure 1 shows the high level diagram of NHE. NHE mechanism 
        involve two key components: NHE DNS Resolver and IPv6/IPv4 
        measurement. In NHE DNS resolver a special list of 
        domains is maintained. The purpose of this list is to indicate 
        the resolver performing AAAA record filtering (returning NODATA) 
        if AAAA record exists for that domain in the list. This special 
        list is updated via a Push (or Pull) interface from IPv6/IPv4 
        measurement component. The list is called NHE filtering 
        list in this document.
      </t>

      <t>
        The component of IPv6/IPv4 measurement is designed 
        to feed the NHE filtering list, by performing IPv6/IPv4 RTT 
        measurement on each cached domains. The cached domains under the 
        measurement can start with a well populated cache, then updated 
        in align with the resolver cache via a Push (or Pull) interface 
        from NHE DNS resolver. The criteria of putting a specific domain 
        into that list and how to perform the measurement are introduced 
        in <xref target="Perf-Measure"/>.
      </t>

      <figure anchor="components" title="High-Level NHE Mechanism">
        <artwork>
          <![CDATA[
                   +--------------------------------+
                   |                                |
                   | IPv6/IPv4 Measurement          |
                   |                                |
                   +--------------+-----------------+
                             ^    |
              Cached domains |    |  Domains with poor 
                             |    |  IPv6 connections
                             |    |
                             |    v
         NODATA       +-----------------------+
       <-----------+  |                       |
                      |  NHE DNS Resolver     |
       +------------> |                       |
    a query for AAAA  +-----------------------+
    record of a domain
        ]]>
        </artwork>
      </figure>

      <t>When the two component of NHE are ready, then the processing 
        is described as follows: Once NHE DNS Resolver receive a AAAA 
        record query from client, the resolver firstly check if the 
        qname matches a entry or not in the NHE filter list. If the 
        qname matches an entry, then the AAAA record will be filtered 
        and a NODATA response will be replied. If no entry is matched, 
        then NHE DNS resolver will response as a normal resolver.
      </t>
      <t>
        Note that NHE can work independently with the adoption of client-side 
        HE. It can push the clients to fall back faster to IPv4 if they does 
        not support HE. It also can help reduce the unnecessary traffic 
        emitted by HE client.
      </t>
    </section>

    <section title="NHE DNS Resolver" anchor="Resolver">

       <t>
        Before <xref target="RFC6555" /> and <xref target="RFC8305" /> 
        were documented, selective 
        filtering of the DNS AAAA record was proposed as a practice 
        making the IPv6 transition less painful <xref target="Less-painful" />. 
        The basic idea introduced is that ISP DNS Recursive 
        servers does not return AAAA for users who have broken 
        IPv6 connectivity. There are some working implementations 
        of it such filter AAAA option in BIND 9 <xref target="Filtering-AAAA"/>
      </t>

      <t>
        Note that in the beginning, it was widely considered difficult 
        to accurately measure working users. So ISP resolver only 
        returns AAAA if the AAAA query came over IPv6. The problem 
        still exist if the IPv6 connectivity is broken due to content 
        provider network or the path in the midst.   
      </t>
      <t>
         NHE DNS resolver adopts selective filtering of the DNS AAAA 
         record as well. However, approach like filter AAAA option 
         does not fit NHE scenarios, because NHE is expected to filter 
         AAAA option based on the qname of the query, not the transport 
         protocol or addresses where the query come from. The difference 
         is that a qname list (referred as to NHE filtering list) is 
         maintained and updated periodically by NHE DNS resolver. It has 
         an interface with IPv6/IPv4 performance measurement 
         which can push the newest list to NHE DNS Resolver. 
      </t>

       <t>
         Besides the Push(or Pull) interface from the measurement , 
         NHE DNS resolver can also Push(or Pull) populated cache to the 
         measurement component as shown in figure 1. The cache 
         pushed by resolver can be optionally companied with additional 
         information like RTT of NS for each domain and number of cache hits. 
         The additional information can be used to reduce measuring traffic 
         which is introduced in <xref target="less-traffic" />
      </t>


    </section>

    <section title= "IPv6/IPv4 Performance Measurement" anchor="Perf-Measure">

      <t>
        An accurate IPv6 performance measurement is vital to the 
        success of NHE. A accurate measurement depends on what to 
        measure, where and how to measure. 
      </t>

    <section title= "Performance metrics">

    <t>
      In client-side HE, a kind of round-trip delay or round-trip 
      time(RTT) metric is used where a race between IPv6 and IPv4 
      connection is measured, starting from DNS lookup, then TCP 
      setup. In NHE, the similar approach can be adopted in ISP 
      network to simulate a client doing race for a list of 
      domains in IPv6 and IPv4: 
    </t>
    <t>
      <list style="symbols">
        <t>Lookup the DNS and make connections via all IPv6 and 
          IPv4 destination addresses returned. The round-trip delay 
          includes RTT of DNS lookup and RTT of TCP setup(send SYN 
          and receive ACK). If there is more than one IP address in 
          either AAAA or A record response, all distance addresses 
          should be measured for round-trip delay.
        </t>
        <t>
          Calculate the difference of round-trip delay (Diff-RTT) of 
          different address family. If there are more than one IP address 
          in either AAAA or A record response, the minimum RTT of a 
          destination from one address family will be chosen to do the 
          difference, that is Min(RTT-IPv6)-min(RTT-IPv4)
        </t>

        <t>For each domain, if the difference of round-trip delay of 
          IPv6 and IPv4 is larger than a configurable threshold, the 
          domain will be listed in the NHE filtering list to be 
          synchronized to NHE DNS resolver. Note that the threshold 
          value should be tunable by network provider to gain a better 
          tradeoff between IPv6 performance and IPv6 priority practice. 
        </t>
      </list>
       </t>

    <t>
      In the measurement process described above, there is a important 
      domain list (called Measuring list) which contains the targeted 
      domains. The list can be formed from the popular domains in the 
      cache pushed from the resolver, but it is not necessary to keep the 
      two identical. This measurement can be done periodically on a 
      specific domain, for example one hour or two, and make it ready 
      for Push to NHE DNS resolver. Note that no protocol is specified 
      in this memo which is used to synchronized NHE Filtering list and 
      cached domains.  
     </t>

    <t>Compared to Client-side HE, NHE operated by ISP operators has 
      more resource to do better performance measurement. The race on 
      the handset measure the round-trip delay on one instantaneous 
      connection which does not fully represent the connectivity 
      performance of one address family in a persistent period. For 
      example erratic variation in delay (caused by network jitter) 
      makes it difficult to support many interactive real-time applications. 
      So the statistics of round-trip delay is helpful for ISP operator 
      to build more sophisticated measurement. Section 4 of <xref target="RFC2681" /> 
      specifies some statistics definitions for round-trip delay which 
      can be utilized for advanced Round-trip delay measurement, such 
      as percentile, median, minimum, inverse percentile etc.
    </t>
    </section>

    <section title="NHE Location considerations">

    <t>
      According to the accuracy requirement of user performance simulation, 
      the location where the measurement is done is very important. The 
      intuitive approach is to placed the measuring probes or servers on 
      the edge, in proximity to the end users. In 4G LTE cellular network 
      as a typical case, the performance measurement server can be located 
      in proximity of base stations (or an aggregation point). There is only 
      at most one hop difference in the end-to-end path between a real end 
      user and a destination. 
    </t> 

    <t>
      There is one question about the location of NHE deployment. If performance 
      measurement server is located on the edge, is NHE resolver should be located 
      in the same place? In another word: are they deployed in pairs? The simple 
      answer is yes which enhance the efficiency of cache if the resolver is 
      deployed on the edge. NHE DNS resolver can be a cache sever forwarding 
      cache missed query to the ISP normal full functional resolver. The only 
      concern is if the caching resolver is located closely to end users, it may 
      lose good cache hit probability. 
    </t>
    </section>

    <section title= "Less measurement traffic" anchor="less-traffic">

      <t>Since the IPv6/IPv4 performance varies per domain, there is a fear 
        of having to generate a lot of measuring traffic in NHE. There are 
        two approaches may be helpful to generate less traffic. One is to keep 
        a moderate size of NHE filtering list including, for example, top 1000
        popular domain in the cache. To achieve that, the NHE resolver should 
        not only Push the cache , but also a popular value of each domain 
        (the number of cache hits). The size of the filtering list can be 
        configurable according to ISP local policy. 
      </t>

      <t>
        The second approach to reduce the measurement traffic is use passive 
        measurement. The round-trip delay of DNS lookup of a particular domain 
        is trivial in most of case if cache hit. So passive measurement should 
        focus on monitoring TCP connection of specific destination. Suppose there 
        are 1000 top popular domain in the measurement list which means thousands 
        TCP connections will be put into passive monitoring to measure the 
        round-trip delay. 
      </t>

    </section>

    </section>

  <section title="Security Considerations">
    <t>
      NHE adopt filtering in the resolver so it will break DNSSEC and omit 
      RRSIG records covering type AAAA as well as AAAA record. The scope of 
      DNSSEC break is limited between client and resolver, which is not 
      the typical scenario of DNSSEC though, in the case clients ask for 
      RRSIG record of AAAA. 
    </t>

    <t>
      Filtering AAAA records cause DNS incoherency in the end users perspective 
      which may causse some risks if end user's application depend on the 
      integrity of DNS data.
    </t>
  </section>

    <section title="IANA considerations">

    <t>No IANA considerations for this memo</t>

    </section>

   <section title="Acknowledgments">
    <t>
    Acknowledgments are given to Geoff Huston, David Schinazi, Marc Blanchet, and Paul Vixie who gave comments and suggestions on this memo. 
    </t>
  </section> <!-- Acknowledgments -->
  </middle>

  <back>

    <references title="References">
      &RFC8305;&RFC2681;&RFC6555;
     <reference anchor="Filtering-AAAA" target="https://kb.isc.org/docs/aa-00576">
            <front>
                <title>Filter AAAA option in BIND 9</title>
                 <author></author>
                <date year="2017" month="August" day="09"/>
            </front>
     </reference>  

          <reference anchor="Less-painful" target="https://www.ietf.org/proceedings/77/slides/dnsop-7.pdf">
            <front>
                <title>IPv6 and recursive resolvers:How do we make the transition less painful?</title>
                <author fullname= "Igor Gashinsky">
                  <organization>Yahoo</organization>
                  <address></address>
                </author>
                <date year="2010" month="March" day="24"/>
            </front>
     </reference>  

      <reference anchor="NHE-GitHub" target="https://github.com/songlinjian/Network-based-Happyeyeballs">
       <front>
        <title>GitHub Repository of Network-side Happy Eyeballs</title>
       <author fullname= "Linjian Song">
       <organization>BII</organization>
        <address></address>
        </author>
        <date></date>
      </front>
    </reference>

     </references>
  </back>
</rfc>

